name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp -r dist deploy/
          cp -r public deploy/
          cp -r server deploy/
          cp package*.json deploy/
          cp docker-compose.prod.yml deploy/docker-compose.yml
          cp .env.example deploy/.env
          cp entrypoint.sh deploy/

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            # Backup current deployment
            if [ -d "/var/www/photobooksgallery" ]; then
              echo "Creating backup..."
              sudo cp -r /var/www/photobooksgallery /var/www/photobooksgallery.backup.$(date +%Y%m%d_%H%M%S)
            fi

            # Clean old deployment
            sudo rm -rf /var/www/photobooksgallery

            # Create deployment directory
            sudo mkdir -p /var/www/photobooksgallery
            sudo chown -R $USER:$USER /var/www/photobooksgallery

      - name: Upload files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          source: "deploy/*"
          target: "/var/www/photobooksgallery"
          strip_components: 1

      - name: Run deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            cd /var/www/photobooksgallery

            # Set proper permissions
            chmod +x entrypoint.sh

            # Create .env file if it doesn't exist
            if [ ! -f .env ]; then
              cp .env.example .env
              echo "⚠️  Please configure .env file with production settings"
            fi

            # Stop existing containers
            docker-compose down || true

            # Start new deployment
            docker-compose up -d --build

            # Wait for health check
            echo "Waiting for application to start..."
            sleep 30

            # Check if application is running
            if curl -f http://localhost:3000/api/health; then
              echo "✅ Deployment successful!"
            else
              echo "❌ Deployment failed - health check failed"
              exit 1
            fi

      - name: Notify deployment status
        if: always()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            echo "Deployment completed at $(date)"
            echo "Application status:"
            docker-compose ps
            echo "Application logs:"
            docker-compose logs --tail=10 app