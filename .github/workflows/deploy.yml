name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check secrets
        run: |
          if [ -z "$SERVER_HOST" ]; then echo "❌ SERVER_HOST is missing"; exit 1; fi
          if [ -z "$SERVER_USER" ]; then echo "❌ SERVER_USER is missing"; exit 1; fi
          if [ -z "$SERVER_SSH_KEY" ]; then echo "❌ SERVER_SSH_KEY is missing"; exit 1; fi
          echo "✅ All secrets are present"
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            # Ensure project directory exists
            if [ ! -d "/var/www/photobooksgallery" ]; then
              echo "Creating project directory..."
              sudo mkdir -p /var/www/photobooksgallery
              sudo chown $USER:$USER /var/www/photobooksgallery
              cd /var/www/photobooksgallery
              git clone https://github.com/vitaligiovanni/PhotoBooksGallery.git .
            else
              # Create backup
              echo "Creating backup..."
              sudo cp -r /var/www/photobooksgallery /var/www/photobooksgallery.backup.$(date +%Y%m%d_%H%M%S)
            fi

            # Update code from Git
            cd /var/www/photobooksgallery
            git fetch origin
            git reset --hard origin/main

            # Install dependencies
            npm ci

            # Build project
            npm run build

            # Ensure logs directory exists
            mkdir -p logs

            # Restart application
            pm2 restart photobooksgallery || pm2 start ecosystem.config.cjs

            # Wait for startup
            echo "Waiting for application to start..."
            sleep 10

            # Health check
            if curl -f http://localhost:3000/api/health; then
              echo "✅ Deployment successful!"
            else
              echo "❌ Health check failed"
              pm2 logs photobooksgallery --lines 20
              exit 1
            fi

      - name: Notify deployment status
        if: always()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            echo "Deployment completed at $(date)"
            echo "PM2 status:"
            pm2 jlist